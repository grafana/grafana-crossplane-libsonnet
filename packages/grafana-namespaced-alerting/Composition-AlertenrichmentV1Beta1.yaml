apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    tanka.dev/namespaced: "false"
  labels:
    crossplane.io/xrd: xalertenrichmentv1beta1s.alerting.grafana.net.namespaced
  name: alertenrichmentv1beta1-namespaced
spec:
  compositeTypeRef:
    apiVersion: alerting.grafana.net.namespaced/v1alpha1
    kind: XAlertenrichmentV1Beta1
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - base:
              apiVersion: alerting.grafana.crossplane.io/v1alpha1
              kind: AlertenrichmentV1Beta1
            name: alertenrichmentv1beta1
            patches:
              - fromFieldPath: spec.parameters.externalName
                toFieldPath: "metadata.annotations[\"crossplane.io/external-name\"]"
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.selectorLabel
                toFieldPath: "metadata.labels[\"selector\"]"
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.metadata.folderUid
                toFieldPath: spec.forProvider.metadata.folderUid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.metadata.uid
                toFieldPath: spec.forProvider.metadata.uid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.options.overwrite
                toFieldPath: spec.forProvider.options.overwrite
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.alertRuleUids
                toFieldPath: spec.forProvider.spec.alertRuleUids
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.annotationMatchers
                toFieldPath: spec.forProvider.spec.annotationMatchers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.description
                toFieldPath: spec.forProvider.spec.description
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.disableProvenance
                toFieldPath: spec.forProvider.spec.disableProvenance
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.labelMatchers
                toFieldPath: spec.forProvider.spec.labelMatchers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.receivers
                toFieldPath: spec.forProvider.spec.receivers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.step
                toFieldPath: spec.forProvider.spec.step
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.spec.title
                toFieldPath: spec.forProvider.spec.title
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.metadata.folderUid
                toFieldPath: spec.initProvider.metadata.folderUid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.metadata.uid
                toFieldPath: spec.initProvider.metadata.uid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.options.overwrite
                toFieldPath: spec.initProvider.options.overwrite
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.alertRuleUids
                toFieldPath: spec.initProvider.spec.alertRuleUids
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.annotationMatchers
                toFieldPath: spec.initProvider.spec.annotationMatchers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.description
                toFieldPath: spec.initProvider.spec.description
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.disableProvenance
                toFieldPath: spec.initProvider.spec.disableProvenance
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.labelMatchers
                toFieldPath: spec.initProvider.spec.labelMatchers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.receivers
                toFieldPath: spec.initProvider.spec.receivers
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.step
                toFieldPath: spec.initProvider.spec.step
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.spec.title
                toFieldPath: spec.initProvider.spec.title
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.managementPolicies
                toFieldPath: spec.managementPolicies
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.name
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.policy.resolution
                toFieldPath: spec.providerConfigRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.policy.resolve
                toFieldPath: spec.providerConfigRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.name
                toFieldPath: spec.publishConnectionDetailsTo.configRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.policy.resolution
                toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.policy.resolve
                toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.annotations
                toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.labels
                toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.type
                toFieldPath: spec.publishConnectionDetailsTo.metadata.type
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.name
                toFieldPath: spec.publishConnectionDetailsTo.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.writeConnectionSecretToRef.name
                toFieldPath: spec.writeConnectionSecretToRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                type: FromCompositeFieldPath
      step: patch-and-transform
    - functionRef:
        name: function-grafana-data
      step: grafana-data