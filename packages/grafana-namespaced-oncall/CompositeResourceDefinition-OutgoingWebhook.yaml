apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    tanka.dev/namespaced: "false"
  name: xoutgoingwebhooks.oncall.grafana.net.namespaced
spec:
  claimNames:
    kind: OutgoingWebhook
    plural: outgoingwebhooks
  defaultCompositionRef:
    name: outgoingwebhook-namespaced
  group: oncall.grafana.net.namespaced
  names:
    kind: XOutgoingWebhook
    plural: xoutgoingwebhooks
  versions:
    - name: v1alpha1
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              properties:
                parameters:
                  description: OutgoingWebhookSpec defines the desired state of OutgoingWebhook
                  properties:
                    deletionPolicy:
                      default: Delete
                      description: |-
                        DeletionPolicy specifies what will happen to the underlying external
                        when this managed resource is deleted - either "Delete" or "Orphan" the
                        external resource.
                        This field is planned to be deprecated in favor of the ManagementPolicies
                        field in a future release. Currently, both could be set independently and
                        non-default values would be honored if the feature flag is enabled.
                        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                      enum:
                        - Orphan
                        - Delete
                      type: string
                    externalName:
                      description: |
                        The name of the managed resource inside the Provider.
                        By default Providers give external resources the same name as the Kubernetes object. A provider uses the external name to lookup a managed resource in an external system. The provider looks up the resource in the external system to determine if it exists, and if it matches the managed resource’s desired state. If the provider can’t find the resource, it creates it.
                        
                        Docs: https://docs.crossplane.io/latest/concepts/managed-resources/#naming-external-resources
                      type: string
                    forProvider:
                      properties:
                        authorizationHeaderSecretRef:
                          description: |-
                            (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
                            The auth data of the webhook. Used in Authorization header instead of user/password auth.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        data:
                          description: |-
                            (String) The data of the webhook.
                            The data of the webhook.
                          type: string
                        forwardWholePayload:
                          description: |-
                            (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
                            Toggle to send the entire webhook payload instead of using the values in the Data field.
                          type: boolean
                        headers:
                          description: |-
                            (String) Headers to add to the outgoing webhook request.
                            Headers to add to the outgoing webhook request.
                          type: string
                        httpMethod:
                          description: |-
                            (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
                            The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
                          type: string
                        integrationFilter:
                          description: |-
                            (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                            Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                          items:
                            type: string
                          type: array
                        isWebhookEnabled:
                          description: |-
                            (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
                            Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
                          type: boolean
                        name:
                          description: |-
                            (String) The name of the outgoing webhook.
                            The name of the outgoing webhook.
                          type: string
                        passwordSecretRef:
                          description: |-
                            (String, Sensitive) The auth data of the webhook. Used for Basic authentication
                            The auth data of the webhook. Used for Basic authentication
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        teamId:
                          description: |-
                            (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                            The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                          type: string
                        triggerTemplate:
                          description: |-
                            (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                            A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                          type: string
                        triggerType:
                          description: |-
                            (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
                            The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
                          type: string
                        url:
                          description: |-
                            (String) The webhook URL.
                            The webhook URL.
                          type: string
                        user:
                          description: |-
                            (String) Username to use when making the outgoing webhook request.
                            Username to use when making the outgoing webhook request.
                          type: string
                      type: object
                    initProvider:
                      description: |-
                        THIS IS A BETA FIELD. It will be honored
                        unless the Management Policies feature flag is disabled.
                        InitProvider holds the same fields as ForProvider, with the exception
                        of Identifier and other resource reference fields. The fields that are
                        in InitProvider are merged into ForProvider when the resource is created.
                        The same fields are also added to the terraform ignore_changes hook, to
                        avoid updating them after creation. This is useful for fields that are
                        required on creation, but we do not desire to update them after creation,
                        for example because of an external controller is managing them, like an
                        autoscaler.
                      properties:
                        authorizationHeaderSecretRef:
                          description: |-
                            (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
                            The auth data of the webhook. Used in Authorization header instead of user/password auth.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        data:
                          description: |-
                            (String) The data of the webhook.
                            The data of the webhook.
                          type: string
                        forwardWholePayload:
                          description: |-
                            (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
                            Toggle to send the entire webhook payload instead of using the values in the Data field.
                          type: boolean
                        headers:
                          description: |-
                            (String) Headers to add to the outgoing webhook request.
                            Headers to add to the outgoing webhook request.
                          type: string
                        httpMethod:
                          description: |-
                            (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
                            The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
                          type: string
                        integrationFilter:
                          description: |-
                            (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                            Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                          items:
                            type: string
                          type: array
                        isWebhookEnabled:
                          description: |-
                            (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
                            Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
                          type: boolean
                        name:
                          description: |-
                            (String) The name of the outgoing webhook.
                            The name of the outgoing webhook.
                          type: string
                        passwordSecretRef:
                          description: |-
                            (String, Sensitive) The auth data of the webhook. Used for Basic authentication
                            The auth data of the webhook. Used for Basic authentication
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        teamId:
                          description: |-
                            (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                            The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                          type: string
                        triggerTemplate:
                          description: |-
                            (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                            A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                          type: string
                        triggerType:
                          description: |-
                            (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
                            The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
                          type: string
                        url:
                          description: |-
                            (String) The webhook URL.
                            The webhook URL.
                          type: string
                        user:
                          description: |-
                            (String) Username to use when making the outgoing webhook request.
                            Username to use when making the outgoing webhook request.
                          type: string
                      type: object
                    managementPolicies:
                      default:
                        - "*"
                      description: |-
                        THIS IS A BETA FIELD. It is on by default but can be opted out
                        through a Crossplane feature flag.
                        ManagementPolicies specify the array of actions Crossplane is allowed to
                        take on the managed and external resources.
                        This field is planned to replace the DeletionPolicy field in a future
                        release. Currently, both could be set independently and non-default
                        values would be honored if the feature flag is enabled. If both are
                        custom, the DeletionPolicy field will be ignored.
                        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                      items:
                        description: |-
                          A ManagementAction represents an action that the Crossplane controllers
                          can take on an external resource.
                        enum:
                          - Observe
                          - Create
                          - Update
                          - Delete
                          - LateInitialize
                          - "*"
                        type: string
                      type: array
                    providerConfigRef:
                      default:
                        name: default
                      description: |-
                        ProviderConfigReference specifies how the provider that will be used to
                        create, observe, update, and delete this managed resource should be
                        configured.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                                - Required
                                - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                                - Always
                                - IfNotPresent
                              type: string
                          type: object
                      required:
                        - name
                      type: object
                    publishConnectionDetailsTo:
                      description: |-
                        PublishConnectionDetailsTo specifies the connection secret config which
                        contains a name, metadata and a reference to secret store config to
                        which any connection details for this managed resource should be written.
                        Connection details frequently include the endpoint, username,
                        and password required to connect to the managed resource.
                      properties:
                        configRef:
                          default:
                            name: default
                          description: |-
                            SecretStoreConfigRef specifies which secret store config should be used
                            for this ConnectionSecret.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                    - Required
                                    - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                    - Always
                                    - IfNotPresent
                                  type: string
                              type: object
                          required:
                            - name
                          type: object
                        metadata:
                          description: Metadata is the metadata for connection secret.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: |-
                                Annotations are the annotations to be added to connection secret.
                                - For Kubernetes secrets, this will be used as "metadata.annotations".
                                - It is up to Secret Store implementation for others store types.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: |-
                                Labels are the labels/tags to be added to connection secret.
                                - For Kubernetes secrets, this will be used as "metadata.labels".
                                - It is up to Secret Store implementation for others store types.
                              type: object
                            type:
                              description: |-
                                Type is the SecretType for the connection secret.
                                - Only valid for Kubernetes Secret Stores.
                              type: string
                          type: object
                        name:
                          description: Name is the name of the connection secret.
                          type: string
                      required:
                        - name
                      type: object
                    selectorLabel:
                      description: Configure a custom label for use with selector.matchLabels.
                      type: string
                    writeConnectionSecretToRef:
                      description: |-
                        WriteConnectionSecretToReference specifies the namespace and name of a
                        Secret to which any connection details for this managed resource should
                        be written. Connection details frequently include the endpoint, username,
                        and password required to connect to the managed resource.
                        This field is planned to be replaced in a future release in favor of
                        PublishConnectionDetailsTo. Currently, both could be set independently
                        and connection details would be published to both without affecting
                        each other.
                      properties:
                        name:
                          description: Name of the secret.
                          type: string
                        namespace:
                          description: Namespace of the secret.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                  required:
                    - forProvider
                  type: object
                  x-kubernetes-validations:
                    - message: spec.forProvider.name is a required parameter
                      rule: "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
                    - message: spec.forProvider.url is a required parameter
                      rule: "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))"
              type: object
          type: object
      served: true