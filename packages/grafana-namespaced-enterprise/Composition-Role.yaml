apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    tanka.dev/namespaced: "false"
  labels:
    crossplane.io/xrd: xroles.enterprise.grafana.net.namespaced
  name: role-namespaced
spec:
  compositeTypeRef:
    apiVersion: enterprise.grafana.net.namespaced/v1alpha1
    kind: XRole
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - base:
              apiVersion: enterprise.grafana.crossplane.io/v1alpha1
              kind: Role
            name: role
            patches:
              - fromFieldPath: spec.parameters.externalName
                toFieldPath: "metadata.annotations[\"crossplane.io/external-name\"]"
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.selectorLabel
                toFieldPath: "metadata.labels[\"selector\"]"
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.autoIncrementVersion
                toFieldPath: spec.forProvider.autoIncrementVersion
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.description
                toFieldPath: spec.forProvider.description
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.displayName
                toFieldPath: spec.forProvider.displayName
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.global
                toFieldPath: spec.forProvider.global
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.group
                toFieldPath: spec.forProvider.group
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.hidden
                toFieldPath: spec.forProvider.hidden
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.name
                toFieldPath: spec.forProvider.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.orgId
                toFieldPath: spec.forProvider.orgId
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationRef.name
                toFieldPath: spec.forProvider.organizationRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationRef.policy.resolution
                toFieldPath: spec.forProvider.organizationRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationRef.policy.resolve
                toFieldPath: spec.forProvider.organizationRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationSelector.matchControllerRef
                toFieldPath: spec.forProvider.organizationSelector.matchControllerRef
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationSelector.matchLabels
                toFieldPath: spec.forProvider.organizationSelector.matchLabels
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationSelector.policy.resolution
                toFieldPath: spec.forProvider.organizationSelector.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.organizationSelector.policy.resolve
                toFieldPath: spec.forProvider.organizationSelector.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.permissions
                toFieldPath: spec.forProvider.permissions
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.uid
                toFieldPath: spec.forProvider.uid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.forProvider.version
                toFieldPath: spec.forProvider.version
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.autoIncrementVersion
                toFieldPath: spec.initProvider.autoIncrementVersion
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.description
                toFieldPath: spec.initProvider.description
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.displayName
                toFieldPath: spec.initProvider.displayName
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.global
                toFieldPath: spec.initProvider.global
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.group
                toFieldPath: spec.initProvider.group
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.hidden
                toFieldPath: spec.initProvider.hidden
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.name
                toFieldPath: spec.initProvider.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.orgId
                toFieldPath: spec.initProvider.orgId
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationRef.name
                toFieldPath: spec.initProvider.organizationRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationRef.policy.resolution
                toFieldPath: spec.initProvider.organizationRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationRef.policy.resolve
                toFieldPath: spec.initProvider.organizationRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationSelector.matchControllerRef
                toFieldPath: spec.initProvider.organizationSelector.matchControllerRef
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationSelector.matchLabels
                toFieldPath: spec.initProvider.organizationSelector.matchLabels
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationSelector.policy.resolution
                toFieldPath: spec.initProvider.organizationSelector.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.organizationSelector.policy.resolve
                toFieldPath: spec.initProvider.organizationSelector.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.permissions
                toFieldPath: spec.initProvider.permissions
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.uid
                toFieldPath: spec.initProvider.uid
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.initProvider.version
                toFieldPath: spec.initProvider.version
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.managementPolicies
                toFieldPath: spec.managementPolicies
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.name
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.policy.resolution
                toFieldPath: spec.providerConfigRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.providerConfigRef.policy.resolve
                toFieldPath: spec.providerConfigRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.name
                toFieldPath: spec.publishConnectionDetailsTo.configRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.policy.resolution
                toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.configRef.policy.resolve
                toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.annotations
                toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.labels
                toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.metadata.type
                toFieldPath: spec.publishConnectionDetailsTo.metadata.type
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publishConnectionDetailsTo.name
                toFieldPath: spec.publishConnectionDetailsTo.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.writeConnectionSecretToRef.name
                toFieldPath: spec.writeConnectionSecretToRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                type: FromCompositeFieldPath
      step: patch-and-transform